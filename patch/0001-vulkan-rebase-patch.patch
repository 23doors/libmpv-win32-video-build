From 5983bd9661f88d11079f7a3d90c306916a614cc3 Mon Sep 17 00:00:00 2001
From: zhongfly <11155705+zhongfly@users.noreply.github.com>
Date: Sat, 5 Nov 2022 11:30:50 +0800
Subject: [PATCH] vulkan: rebase patch

---
 ...1-cross-compile-static-linking-hacks.patch | 38 +++++++++----------
 1 file changed, 19 insertions(+), 19 deletions(-)

diff --git a/packages/vulkan-0001-cross-compile-static-linking-hacks.patch b/packages/vulkan-0001-cross-compile-static-linking-hacks.patch
index 261ddb0..9413a3f 100644
--- a/packages/vulkan-0001-cross-compile-static-linking-hacks.patch
+++ b/packages/vulkan-0001-cross-compile-static-linking-hacks.patch
@@ -1,6 +1,6 @@
-From b86604f400583fbef0c695f137490ee0324d9000 Mon Sep 17 00:00:00 2001
+From c197988447865ad3d34887a086cbd21c426e76e5 Mon Sep 17 00:00:00 2001
 From: shinchiro <shinchiro@users.noreply.github.com>
-Date: Wed, 7 Sep 2022 09:03:52 +0800
+Date: Sat, 5 Nov 2022 02:18:00 +0000
 Subject: [PATCH] loader: cross-compile & static linking hacks
 
 ---
@@ -12,7 +12,7 @@ Subject: [PATCH] loader: cross-compile & static linking hacks
  5 files changed, 20 insertions(+), 6 deletions(-)
 
 diff --git a/loader/CMakeLists.txt b/loader/CMakeLists.txt
-index bf43087..50cf245 100644
+index e46a36725..4cf6da612 100644
 --- a/loader/CMakeLists.txt
 +++ b/loader/CMakeLists.txt
 @@ -24,7 +24,7 @@ add_library(loader_specific_options INTERFACE)
@@ -33,7 +33,7 @@ index bf43087..50cf245 100644
      if(MINGW)
          find_program(JWASM_FOUND jwasm)
          if (JWASM_FOUND)
-@@ -219,7 +219,7 @@ else() # i.e.: Linux
+@@ -268,7 +268,7 @@ else() # i.e.: Linux
      endif()
  endif()
  
@@ -42,7 +42,7 @@ index bf43087..50cf245 100644
      add_library(loader-opt STATIC ${OPT_LOADER_SRCS})
      target_link_libraries(loader-opt PUBLIC loader_specific_options)
      add_dependencies(loader-opt loader_asm_gen_files)
-@@ -261,7 +261,7 @@ if(WIN32)
+@@ -310,7 +310,7 @@ if(WIN32)
      add_dependencies(vulkan loader_asm_gen_files)
  
  else()
@@ -51,7 +51,7 @@ index bf43087..50cf245 100644
          add_library(vulkan STATIC ${NORMAL_LOADER_SRCS} ${OPT_LOADER_SRCS})
          target_compile_definitions(vulkan PRIVATE BUILD_STATIC_LOADER)
      else()
-@@ -305,6 +305,7 @@ else()
+@@ -354,6 +354,7 @@ else()
          # https://forums.developer.apple.com/thread/65963
  
  # cmake-format: off
@@ -59,7 +59,7 @@ index bf43087..50cf245 100644
          set_target_properties(vulkan-framework PROPERTIES
              OUTPUT_NAME vulkan
              FRAMEWORK TRUE
-@@ -318,6 +319,7 @@ else()
+@@ -367,6 +368,7 @@ else()
              PUBLIC_HEADER DESTINATION vulkan
              FRAMEWORK DESTINATION loader
          )
@@ -67,16 +67,16 @@ index bf43087..50cf245 100644
  # cmake-format: on
      endif()
  endif()
-@@ -337,7 +339,7 @@ if(PKG_CONFIG_FOUND)
-     foreach(LIB ${CMAKE_CXX_IMPLICIT_LINK_LIBRARIES} ${PLATFORM_LIBS})
-         set(PRIVATE_LIBS "${PRIVATE_LIBS} -l${LIB}")
-     endforeach()
+@@ -392,7 +394,7 @@ if(PKG_CONFIG_FOUND)
+         list(REMOVE_DUPLICATES PRIVATE_LIBS)
+         set(PRIVATE_LIBS "Libs.private: ${PRIVATE_LIBS}")
+     endif()
 -    if(WIN32)
 +    if(WIN32 AND NOT BUILD_STATIC_LOADER)
          if(MINGW)
              set(VULKAN_LIB_SUFFIX "-1.dll")
          else()
-@@ -353,6 +355,7 @@ if(PKG_CONFIG_FOUND)
+@@ -408,6 +410,7 @@ if(PKG_CONFIG_FOUND)
      else()
          set(CMAKE_INSTALL_FULL_LIBDIR_PC ${CMAKE_INSTALL_FULL_LIBDIR})
      endif ()
@@ -85,7 +85,7 @@ index bf43087..50cf245 100644
      install(FILES "${CMAKE_CURRENT_BINARY_DIR}/vulkan.pc" DESTINATION "${CMAKE_INSTALL_LIBDIR}/pkgconfig")
  endif()
 diff --git a/loader/loader.h b/loader/loader.h
-index 3beb8b6..c8a57d6 100644
+index add6fb603..c95e2480d 100644
 --- a/loader/loader.h
 +++ b/loader/loader.h
 @@ -32,7 +32,9 @@
@@ -99,7 +99,7 @@ index 3beb8b6..c8a57d6 100644
  static inline VkPhysicalDevice loader_unwrap_physical_device(VkPhysicalDevice physicalDevice) {
      struct loader_physical_device_tramp *phys_dev = (struct loader_physical_device_tramp *)physicalDevice;
 diff --git a/loader/loader.rc b/loader/loader.rc
-index 996d9c5..90863da 100644
+index 996d9c5e9..90863da4a 100644
 --- a/loader/loader.rc
 +++ b/loader/loader.rc
 @@ -19,7 +19,11 @@
@@ -115,7 +115,7 @@ index 996d9c5..90863da 100644
  // All set through CMake
  #define VER_FILE_VERSION 1, 0, 1111, 2222
 diff --git a/loader/loader_windows.c b/loader/loader_windows.c
-index 4015acb..0262dc7 100644
+index db8b69104..2293628be 100644
 --- a/loader/loader_windows.c
 +++ b/loader/loader_windows.c
 @@ -47,6 +47,8 @@
@@ -144,10 +144,10 @@ index 4015acb..0262dc7 100644
  bool windows_add_json_entry(const struct loader_instance *inst,
                              char **reg_data,    // list of JSON files
 diff --git a/loader/vk_loader_platform.h b/loader/vk_loader_platform.h
-index ebfa2eb..06cf9cf 100644
+index 44120f2c2..468c3a532 100644
 --- a/loader/vk_loader_platform.h
 +++ b/loader/vk_loader_platform.h
-@@ -65,6 +65,7 @@
+@@ -66,6 +66,7 @@
  #include <io.h>
  #include <shlwapi.h>
  #include <direct.h>
@@ -155,7 +155,7 @@ index ebfa2eb..06cf9cf 100644
  #endif  // defined(_WIN32)
  
  #include "stack_allocation.h"
-@@ -203,7 +204,7 @@ static inline bool loader_platform_is_path(const char *path) { return strchr(pat
+@@ -216,7 +217,7 @@ static inline bool loader_platform_is_path(const char *path) { return strchr(pat
  // resources allocated by anything allocated by once init. This isn't a problem for static libraries, but it is for dynamic
  // ones. When building a DLL, we use DllMain() instead to allow properly cleaning up resources.
  
@@ -165,5 +165,5 @@ index ebfa2eb..06cf9cf 100644
      assert(func != NULL);
      assert(ctl != NULL);
 -- 
-2.37.2
+2.38.1
 
-- 
2.38.1

